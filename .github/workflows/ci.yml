name: CI

on:
  pull_request:
  push:
    branches:
      - main
      - develop

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}-${{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[dev]
      - name: Ruff lint
        run: ruff check .
      - name: Ruff format check
        run: ruff format --check .
      - name: Black check
        run: black --check .
      - name: Mypy (core module)
        run: mypy src/mini_rsa
      - name: Pytest (without GUI)
        env:
          HYPOTHESIS_PROFILE: ci
        run: pytest -m "not gui" --randomly-seed=1 --cov=mini_rsa --cov-report=xml --cov-fail-under=90
      - name: Coverage gate
        run: |
          python - <<'PY'
          import xml.etree.ElementTree as ET
          pct = float(ET.parse("coverage.xml").getroot().get("line-rate", 0.0)) * 100
          print(f"coverage: {pct:.1f}%")
          raise SystemExit(0 if pct >= 90 else 1)
          PY
      - name: Bandit security scan
        run: bandit -q -r src/mini_rsa rsa.py
      - name: pip-audit
        run: pip-audit -r requirements.txt

  gui-smoke:
    runs-on: ubuntu-latest
    needs: quality
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install system deps
        run: sudo apt-get update && sudo apt-get install -y xvfb libegl1 libgl1
      - name: Install project (GUI extras)
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[dev,gui]
      - name: Run GUI smoke tests
        env:
          QT_QPA_PLATFORM: offscreen
          HYPOTHESIS_PROFILE: ci
        run: xvfb-run -a pytest -m gui

  mutation:
    runs-on: ubuntu-latest
    timeout-minutes: 240
    needs: quality
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[dev]
      - name: Determine mutation scope
        id: mutationscope
        run: |
          if [ -n "${{ github.base_ref }}" ]; then
            git fetch origin "${{ github.base_ref }}"
            files=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep '^src/mini_rsa/.*\.py$' || true)
          else
            files="src/mini_rsa/core.py"
          fi
          echo "files=$files" >> "$GITHUB_OUTPUT"
      - name: Run mutmut
        if: steps.mutationscope.outputs.files != ''
        continue-on-error: true
        run: |
          mutmut run --paths-to-mutate ${{ steps.mutationscope.outputs.files }} | tee mutmut.log
          mutmut results > mutmut.results || true
      - name: Upload mutation artifacts
        if: always() && steps.mutationscope.outputs.files != ''
        uses: actions/upload-artifact@v4
        with:
          name: mutmut-${{ github.run_id }}
          path: |
            mutmut.log
            mutmut.results
      - name: Enforce survivor threshold
        if: steps.mutationscope.outputs.files != ''
        run: |
          survivors=$(grep -Eo 'Survived[^0-9]*([0-9]+)' mutmut.results | grep -Eo '[0-9]+' | tail -n1 || echo 0)
          echo "survivors=$survivors"
          test "$survivors" -le 1

  macos-check:
    runs-on: macos-latest
    needs: quality
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[dev]
      - name: Run pytest (non-GUI)
        env:
          HYPOTHESIS_PROFILE: ci
        run: pytest -m "not gui" --randomly-seed=1 --cov=mini_rsa --cov-report=xml --cov-fail-under=90
